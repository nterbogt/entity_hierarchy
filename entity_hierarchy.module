<?php

/**
 * @file
 *
 * A module to make entities hierarchical.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements @see hook_help().
 */
function entity_hierarchy_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.entity_hierarchy':
      return t('A module to create hierarchical entities. To get started, add a field of type <em>Entity Reference Hierarchy</em> to your entity to keep track of parents.');
  }
}

/**
 * Implements @see hook_entity_type_build().
 *
 * Here we're adding a form controller class for a custom node form without
 * overriding the default node form.
 *
 * More specifically, we're adding a children form to a tab named children.
 * This routing information for this tab is set in the .routing.yml file, and
 * the .links.task.yml file.
 *
 * @see \Drupal\entity_hierarchy\Form\NodehierarchyChildrenForm
 */
function entity_hierarchy_entity_type_build(array &$entity_types) {
  // @todo add support for all entity types.
  /** @type $entity_types \Drupal\Core\Entity\EntityTypeInterface[] */
  if (isset($entity_types['node'])) {
    $entity_types['node']
      ->setFormClass('entity_hierarchy_children', 'Drupal\entity_hierarchy\Form\NodehierarchyChildrenForm')
      ->setLinkTemplate('entity_hierarchy-children-form', '/node/{node}/children');
  }
}
